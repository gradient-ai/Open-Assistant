name: Build

on:
  workflow_call:
    inputs:
      dockerfile:
        required: true
        type: string
      context:
        required: true
        type: string
      image-name:
        required: true
        type: string
      build-args:
        required: false
        type: string
  workflow_dispatch:

jobs:
  build:
    name: Build Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1
      - name: Login to container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get base registry
        run: |
          echo "REGISTRY=ghcr.io/${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
      - name: Set tag prefix
        if: github.ref_name != 'main'
        run: |
          echo "TAG_PREFIX=${{ github.ref_name }}-" >> $GITHUB_ENV
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ${{ env.REGISTRY }}/${{ inputs.image-name }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
            type=sha,prefix=${{ env.TAG_PREFIX }},format=short,enable=${{ github.ref_name != 'main' }}
            type=ref,event=tag,enable=${{ github.ref_name != 'main' }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3.2.0
        with:
          file: ${{ inputs.dockerfile }}
          context: ${{ inputs.context }}
          build-args: ${{ inputs.build-args }}
          push: true
          tags: ghcr.io/${{ github.repository }}/open-assistant:latest@${{ steps.build-push.outputs.digest }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - uses: paperspace/deploy-action@v1.0
        name: Deploy to Paperspace
        id: deploy
        env:
          PAPERSPACE_API_KEY: ${{ secrets.PAPERSPACE_API_KEY }}
          CONTAINER_SHA: ${{ steps.set-container-sha.outputs.CONTAINER_SHA }}
        with:
          projectId: prpgbppt3
          image: ghcr.io/${{ github.repository }}/open-assistant:latest@${{ steps.build-push.outputs.digest }}
